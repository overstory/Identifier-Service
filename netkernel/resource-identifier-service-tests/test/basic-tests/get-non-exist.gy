import org.netkernel.layer0.nkf.INKFRequestContext

import static com.jayway.restassured.RestAssured.*
import com.jayway.restassured.config.RestAssuredConfig
import static org.hamcrest.Matchers.*
import javax.xml.namespace.NamespaceContext

INKFRequestContext context = context

context.sink ("active:RESTAssured/config", context.source ("res:/test/idsvc/ra-config.xml"))
context.sink ("active:RESTAssured/xml-config", context.source ("res:/test/idsvc/xml-config.xml"))

RestAssuredConfig xmlconfig = context.source ("active:RESTAssured/xml-config", RestAssuredConfig.class)
NamespaceContext namespaces = context.source ("active:RESTAssured/xml-config/namespaces", NamespaceContext.class)

// Assert non-empty body and not found error result for the requested resource
given()
	.config (xmlconfig)
	.header ("Accept", "application/vnd.overstory.meta.id+xml")
.when()
	.get ("/identifier/id/something-very-unlikely-to-exist")
.then()
	.log().ifStatusCodeMatches (not(404))
	.statusCode (404)
	.contentType ("application/vnd.overstory.error+xml")
	.body (not (empty()))
	.body (hasXPath ("/e:errors/e:resource-not-found/e:uri", namespaces, equalTo ('something-very-unlikely-to-exist')))
;

// Samr thing, but ask for JSON, check that error result type is JSON
given()
	.config (xmlconfig)
	.header ("Accept", "application/vnd.overstory.meta.id+json")
.when()
	.get ("/identifier/id/something-very-unlikely-to-exist")
.then()
	.log().ifStatusCodeMatches (not(404))
	.statusCode (404)
	.contentType ("application/vnd.overstory.error+json")
	.body (not (empty()))
	.body ("'e:errors'.'e:resource-not-found'.'e:uri'", equalTo ('something-very-unlikely-to-exist'))
;

context.createResponseFrom (true)


